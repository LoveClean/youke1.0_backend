<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.media.ops.backend.dao.mapper.PlaydeliveryMapper">
	<resultMap id="BaseResultMap" type="com.media.ops.backend.dao.entity.Playdelivery">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="playid" jdbcType="INTEGER" property="playid" />
		<result column="delivertype" jdbcType="INTEGER" property="delivertype" />
		<result column="areaid" jdbcType="VARCHAR" property="areaid" />
		<result column="groupid" jdbcType="INTEGER" property="groupid" />
		<result column="create_by" jdbcType="VARCHAR" property="createBy" />
		<result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
		<result column="update_by" jdbcType="VARCHAR" property="updateBy" />
		<result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
		<result column="remarks" jdbcType="VARCHAR" property="remarks" />
		<result column="del_flag" jdbcType="CHAR" property="delFlag" />
	</resultMap>
	<sql id="Base_Column_List">
		id, playid, delivertype, areaid, groupid, create_by,
		create_date,update_by, update_date, remarks, del_flag
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tbplaydelivery
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		tbplaydelivery
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.media.ops.backend.dao.entity.Playdelivery"
		useGeneratedKeys="true" keyProperty="id">
		insert into tbplaydelivery (id,
		playid,delivertype,
		areaid, groupid, create_by, create_date,
		update_by, update_date, remarks,
		del_flag)
		values
		(#{id,jdbcType=INTEGER}, #{playid,jdbcType=INTEGER},
		#{delivertype,jdbcType=INTEGER},
		#{areaid,jdbcType=VARCHAR},
		#{groupid,jdbcType=INTEGER},
		#{createBy,jdbcType=VARCHAR}, now(),
		#{updateBy,jdbcType=VARCHAR}, now(), #{remarks,jdbcType=VARCHAR},
		0)
	</insert>
	<insert id="insertSelective" parameterType="com.media.ops.backend.dao.entity.Playdelivery"
		useGeneratedKeys="true" keyProperty="id">
		insert into tbplaydelivery
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="playid != null">
				playid,
			</if>
			<if test="delivertype != null">
				delivertype,
			</if>
			<if test="areaid != null">
				areaid,
			</if>
			<if test="groupid != null">
				groupid,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="delFlag != null">
				del_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="playid != null">
				#{playid,jdbcType=INTEGER},
			</if>
			<if test="delivertype != null">
				#{delivertype,jdbcType=INTEGER},
			</if>
			<if test="areaid != null">
				#{areaid,jdbcType=VARCHAR},
			</if>
			<if test="groupid != null">
				#{groupid,jdbcType=INTEGER},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				now(),
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				now(),
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="delFlag != null">
				0,
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.media.ops.backend.dao.entity.Playdelivery">
		update tbplaydelivery
		<set>
			<if test="playid != null">
				playid = #{playid,jdbcType=INTEGER},
			</if>
			<if test="delivertype != null">
				delivertype = #{delivertype,jdbcType=INTEGER},
			</if>
			<if test="areaid != null">
				areaid = #{areaid,jdbcType=VARCHAR},
			</if>
			<if test="groupid != null">
				groupid = #{groupid,jdbcType=INTEGER},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				update_date = now(),
			</if>
			<if test="remarks != null">
				remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="delFlag != null">
				del_flag = #{delFlag,jdbcType=CHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.media.ops.backend.dao.entity.Playdelivery">
		update
		tbplaydelivery
		set playid = #{playid,jdbcType=INTEGER},
		delivertype =
		#{delivertype,jdbcType=INTEGER},
		areaid = #{areaid,jdbcType=VARCHAR},
		groupid = #{groupid,jdbcType=INTEGER},
		create_by =
		#{createBy,jdbcType=VARCHAR},
		create_date =
		#{createDate,jdbcType=TIMESTAMP},
		update_by =
		#{updateBy,jdbcType=VARCHAR},
		update_date = now(),
		remarks =
		#{remarks,jdbcType=VARCHAR},
		del_flag = #{delFlag,jdbcType=CHAR}
		where
		id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectList" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		from tbplaydelivery
		where del_flag='0'
		ORDER BY id desc
	</select>

	<select id="selectByGroupBeginEndTime" parameterType="map"
		resultType="com.media.ops.backend.vo.VmPlayDeliveryVo">
		select *
		from vwplaydelivery
		where `status`!=3 and
		delivertype=#{deliveryType} and areaid=#{areaId} and
		groupid=#{groupId} and
		(
		(DATE_FORMAT(begintime,'%Y-%m-%d %H:%i:%S') >=
		#{begintime} AND
		#{endtime}>=DATE_FORMAT(begintime,'%Y-%m-%d
		%H:%i:%S')) OR
		( #{begintime}>=DATE_FORMAT(begintime,'%Y-%m-%d
		%H:%i:%S') AND
		DATE_FORMAT(endtime,'%Y-%m-%d %H:%i:%S') >= #{endtime})
		OR
		(DATE_FORMAT(endtime,'%Y-%m-%d %H:%i:%S') >= #{begintime} AND
		#{endtime}>=DATE_FORMAT(endtime,'%Y-%m-%d %H:%i:%S'))
		)
	</select>

	<select id="selectByKeys" resultMap="BaseResultMap"
		parameterType="map">
		SELECT
		<include refid="Base_Column_List" />
		from tbplaydelivery
		<where>
			<if test="areaId != null">
				and areaid like #{areaId}
			</if>
			<if test="deliverType != null">
				and delivertype = #{deliverType}
			</if>
			<if test="groupId != null">
				and groupid = #{groupId}
			</if>
		</where>
	</select>

	<select id="checkExistByPlayId" resultType="int" parameterType="map">
		SELECT count(1)
		from tbplaydelivery
		where playid = #{playId} and
		del_flag='0'
	</select>

	<update id="batchUpdateDelFlagByPlayId" parameterType="map">
		update tbplaydelivery
		set
		del_flag='1',
		<if test="updateBy != null">
			update_by = #{updateBy,jdbcType=VARCHAR}
		</if>
		<where>
			<if test="playId  != null">
				and playid = #{playId,jdbcType=INTEGER}
			</if>
		</where>
	</update>

	<insert id="batchInsert" parameterType="list" useGeneratedKeys="true"
		keyProperty="id">
		insert into tbplaydelivery (id,playid,delivertype,areaid, groupid, create_by, create_date,update_by, update_date,del_flag)
		values
		<foreach collection="playdeliverys" index="index" item="item"
			separator=",">
			(
			#{item.id},#{item.playid},#{item.delivertype},#{item.areaid},#{item.groupid},#{item.createBy},now(),#{item.updateBy},now(),0
			)
		</foreach>
	</insert>

	<select id="selectByKeys2" resultMap="BaseResultMap"
			parameterType="map">
		SELECT
		<include refid="Base_Column_List" />
		from tbplaydelivery
		<where>
			del_flag = 0
			<if test="areaId != null">
                and areaid LIKE #{areaId}"%"
			</if>
			<if test="deliverType != null and deliverType !=2">
				and delivertype = #{deliverType}
			</if>
			<if test="groupId != null">
				and groupid = #{groupId}
			</if>
		</where>
	</select>

	<update id="batchDelete" parameterType="java.util.List">
		UPDATE tbplaydelivery set del_flag = 1 , update_by = #{updateBy,jdbcType=VARCHAR} where id IN
		<foreach collection="list" item="list" index="index" open="(" separator="," close=")">
			#{list}
		</foreach>
		and del_flag = 0
	</update>

</mapper>